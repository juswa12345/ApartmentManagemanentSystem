// <auto-generated />
using System;
using Leasing.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Leasing.Infrastructure.Migrations
{
    [DbContext(typeof(LeasingDBContext))]
    partial class LeasingDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Leasing")
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Leasing.Domain.Entities.LeasingRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("TenantId");

                    b.HasIndex("UnitId");

                    b.ToTable("LeasingRecords", "Leasing");
                });

            modelBuilder.Entity("Leasing.Domain.Entities.Owner", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Owners", "Leasing");
                });

            modelBuilder.Entity("Leasing.Domain.Entities.Tenant", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.ToTable("Tenants", "Leasing");
                });

            modelBuilder.Entity("Leasing.Domain.Entities.Unit", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BuildingName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("CurrentOccupancy")
                        .HasColumnType("int");

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<decimal?>("MonthlyRent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("OccupancyLimit")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UnitNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Units", "Leasing");
                });

            modelBuilder.Entity("Leasing.Domain.Entities.LeasingRecord", b =>
                {
                    b.HasOne("Leasing.Domain.Entities.Owner", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Leasing.Domain.Entities.Tenant", "Tenant")
                        .WithMany("LeaseRecords")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Leasing.Domain.Entities.Unit", "Unit")
                        .WithMany("LeasingHistory")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Leasing.Domain.ValueObjects.LeaseTerm", "Term", b1 =>
                        {
                            b1.Property<Guid>("LeasingRecordId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTimeOffset?>("End")
                                .HasColumnType("datetimeoffset")
                                .HasColumnName("LeaseEnd");

                            b1.Property<DateTimeOffset>("Start")
                                .HasColumnType("datetimeoffset")
                                .HasColumnName("LeaseStart");

                            b1.HasKey("LeasingRecordId");

                            b1.ToTable("LeasingRecords", "Leasing");

                            b1.WithOwner()
                                .HasForeignKey("LeasingRecordId");
                        });

                    b.OwnsOne("Leasing.Domain.ValueObjects.Money", "MonthlyRent", b1 =>
                        {
                            b1.Property<Guid>("LeasingRecordId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("MonthlyRentAmount");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasMaxLength(3)
                                .IsUnicode(false)
                                .HasColumnType("varchar(3)")
                                .HasColumnName("MonthlyRentCurrency");

                            b1.HasKey("LeasingRecordId");

                            b1.ToTable("LeasingRecords", "Leasing");

                            b1.WithOwner()
                                .HasForeignKey("LeasingRecordId");
                        });

                    b.Navigation("MonthlyRent")
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Tenant");

                    b.Navigation("Term")
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Leasing.Domain.Entities.Owner", b =>
                {
                    b.OwnsOne("ApartmentManagementSystem.SharedKernel.ValueObjects.PersonName", "OwnerName", b1 =>
                        {
                            b1.Property<Guid>("OwnerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("OwnerId");

                            b1.ToTable("Owners", "Leasing");

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");
                        });

                    b.Navigation("OwnerName")
                        .IsRequired();
                });

            modelBuilder.Entity("Leasing.Domain.Entities.Tenant", b =>
                {
                    b.HasOne("Leasing.Domain.Entities.Unit", null)
                        .WithMany("tenants")
                        .HasForeignKey("UnitId");

                    b.OwnsOne("ApartmentManagementSystem.SharedKernel.ValueObjects.PersonName", "TenantName", b1 =>
                        {
                            b1.Property<Guid>("TenantId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("TenantId");

                            b1.ToTable("Tenants", "Leasing");

                            b1.WithOwner()
                                .HasForeignKey("TenantId");
                        });

                    b.Navigation("TenantName")
                        .IsRequired();
                });

            modelBuilder.Entity("Leasing.Domain.Entities.Tenant", b =>
                {
                    b.Navigation("LeaseRecords");
                });

            modelBuilder.Entity("Leasing.Domain.Entities.Unit", b =>
                {
                    b.Navigation("LeasingHistory");

                    b.Navigation("tenants");
                });
#pragma warning restore 612, 618
        }
    }
}
