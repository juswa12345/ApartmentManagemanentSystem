// <auto-generated />
using System;
using Billing.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Billing.Infrastructure.Migrations
{
    [DbContext(typeof(BillingDBContext))]
    [Migration("20250903101726_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Billing")
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Billing.Domain.Entities.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTimeOffset>("DateOfPayment")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("NextDueAmountToPay")
                        .HasColumnType("float");

                    b.Property<DateTimeOffset?>("NextDuePaymentDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("TenantID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UnitID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("isNextDuePaid")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Payments", "Billing");
                });
#pragma warning restore 612, 618
        }
    }
}
